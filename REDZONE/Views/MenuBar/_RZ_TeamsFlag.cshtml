@model REDZONE.Models.TeamActivityCount
@{
    string alertBGColor = (Model.totalTasks > 0) ? "#fa3e3e" : "green";

}
<style>
    /* Define how each icon button should look like */
    .taskButton {
        color: white;
        display: inline-block; /* Inline elements with width and height. TL;DR they make the icon buttons stack from left-to-right instead of top-to-bottom */
        position: relative; /* All 'absolute'ly positioned elements are relative to this one */
        padding: 2px 5px; /* Add some padding so it looks nice */
    }
    /* Make the badge float in the top right corner of the button */
    .button__badge {
        /*background-color: #fa3e3e;*/
        border-radius: 5px;
        color: white;
        padding: 0px 5px;
        font-size: 11px;
        position: absolute; /* Position the badge within the relatively positioned button */
        top: 4px;
        right: -5px;
    }

    .ddTask {
        position: relative;
        display: inline-block;
    }

    .ddTask-content {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        /*padding: 12px 16px;*/
        padding: 1px;
    }

    .ddTask:hover .ddTask-content {
        display: block;
    }
</style>

<ul class="nav navbar-nav menuItem " id="myTasksFlag" style="margin-right:14px; font-size:medium">
    <li class="dropdown ddTask" style="padding:0; ">
        <a class="dropdown-toggle taskButton" data-toggle="dropdown" href="#">
            <span><i class="glyphicon glyphicon-flag"></i></span>
            <span class="button__badge" style="background-color: @alertBGColor">@Model.totalTasks</span>
        </a>
        @*<ul class="dropdown-menu">
                @if (Model.totalTasks > 0)
                {
                    if (Model.mtrcCount > 0)
                    {
                        <li id="menuTaskMetric"><a href="/Tasks/Index/?display=mtrc">Metric Tasks (@Model.mtrcCount)</a></li>
                    }

                    if (Model.actPlanCount > 0)
                    {
                        <li id="menuTaskAP"><a href="/Tasks/Index/?display=ap">Action Plan Tasks (@Model.actPlanCount)</a></li>
                    }
                }
                else
                {
                    <li>NO PENDING TASKS</li>
                }
            </ul>*@
        <div class="ddTask-content" style="font-size:small">
            <div style="background-color:black; color:white; padding:7px; text-align:center">My Team's Activities</div>
            <div id="taskSummary" style="border:3px solid black; border-bottom-left-radius:4px; border-bottom-right-radius:4px;display:none">
                @*Container for the Summary List retrieved via ajax (If enabled)*@
            </div>
            <div id="taskItems" style="border:3px solid black; border-bottom-left-radius:4px; border-bottom-right-radius:4px; display:none">
                <table class="table table-condensed" style="width:100%">
                    @if (Model.totalTasks > 0)
                    {
                        foreach (var bldg in Model.buildingActivityList)
                        {
                            string bldgCount = (bldg.submitCount + bldg.reviewCount).ToString();
                            <tr class="taskItem" style="text-align:left; color:black;">
                                <td @*style="min-width:350px; "*@>
                                    <div style="margin:0; padding:0;">
                                        <a href="/Tasks/TeamActivities">@bldg.bldgName (@bldgCount)</a>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr class="taskItem" style="text-align:left; color:green;">
                            <td>
                                <div style="margin:0; padding:0;">
                                    <span>NO PENDING TASKS</span>
                                </div>
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </li>
</ul>







<script>
    $(document).ready(function () {

        var enableSummaryList = false;
        if (localStorage.getItem("enableSummaryList") == "Y") { enableSummaryList = true; }

        //Hide or Display the "My Tasks" Menu Items Section or the Ajax Server Task Summary List Section according to the "enableSummaryList" Indicator
        if (!enableSummaryList) {
            $('#taskItems').show();   //Just show Menu options simmilar to the "My Task" Menu option
        }
        else {
            $('#taskSummary').show();  //Just show the Section that will contain the Summary List retrieved from Server when user moves mouse over it
        }


        $('.ddTask').mouseenter(function () {
            //We will either show menu items or a summary os Task feom Server via ajax based on the "enableSummaryList" indicator.

            if (enableSummaryList) {
                //Retrieve the Task Summary List from the Server via ajax
                //When Task Icon is mouseovered, display a "wait" Message then call ajax to update again with the Server retrieved data
                $('#taskSummary').html('<br /><br />PLEASE WAIT WHILE DATA LOADS<br /><br /><img src="/Images/ui-anim_basic_16x16.gif" /><br /><br />');
                //alert('Loading data via ajax');
                var cashData = false;
                //if ($('#cacheTasksList').val() == "Y") {cashData = true; }
                //else {
                //    $('#cacheTasksList').val("Y");
                //    cashData = false;
                //}

                $.ajax({
                    url: '/Tasks/_myTaskSummary',
                    method: "POST",
                    cache: cashData,
                    dataType: "text",
                    //data: { uFName: pFName, uLName: pLName, uLoginName: pLoginName, email: pEmail, uRole: pRole, uBuildings: pBuildings, uId: pId, turnOff: pTurnOff },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $('#taskSummary').html("ERROR: Failed to load data from server");
                    }
                }).done(function (taskList) {
                    $('#taskSummary').html(taskList);
                });
            }
        });


        $('.ddTask').click(function () {
            $('#cacheTasksList').val("N");
        });

    });
</script>
