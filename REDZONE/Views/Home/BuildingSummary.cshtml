@model REDZONE.Models.BuildingSummaryViewModel
@{
    ViewBag.Title = "Building Summary";
    int colCounter = 0;
}
<link href="~/Content/RedZoneApp.css" rel="stylesheet" />

<style>
  .valueCell {
      font-weight: bold;
      /*font-size:medium;*/
      padding-top:5px;
      padding-bottom:5px;
  }
  .bordered-2r { border: 4px solid black; border-radius: 5px; }
  .actions-th {
      border:2px solid black;
      border-radius: 5px;
      font-weight:bold;
      font-size:large;
      margin: 0px 10px;
      padding:5px;
  }

.context-menu {
    display:none;
    position: absolute;
    z-index: 10;
    list-style-type:none;
    overflow: hidden;
    border: 1px solid #CCC;
    white-space: nowrap;
    font-family: sans-serif;
    background: #FFF;
    color: black;
    border-radius: 8px;
    margin:0;
    padding: 0;
}
.context-menu--active {
    display: block;
}
/* Each of the items in the list */
.context-menu li {
    padding: 4px;
    cursor: pointer;
    list-style-type: none;
    transition: all .3s ease;
    color:black;
}

.context-menu li:hover {
    background-color: #DEF;
}

.context-menu__item {
        color:black;
        list-style-type: none;
}
</style>
<div class="row" style="font-family:Arial; margin-top: 5px">
    <div class="panel panel-default" style="margin-bottom:0px; ">
        <div class="panel-heading" style="text-align:center; padding: 0px 15px; ">
            <div class="row">
                <div class="col-sm-12">
                    <div class="row ">
                        <div class="col-xs-1">
                            <a href="/Home/Index"><img src="~/Images/BackToDashboard.png" width="80" height="35" style="float: right" /></a>
                        </div>
                        <div class="col-xs-10">
                            <span style="font-size:x-large; font-weight:bold; color:darkblue">Building Summary</span>
                        </div>
                        <div class="col-xs-1">
                            @*<input type="image" src="~/Images/BackToDashboard.png" width="80" height="35" style="float:right" onclick="javascript:location('/Home/Index')">*@
                        </div>
                    </div>
                    <div class="row" style="margin-bottom:3px">
                        <div class="input-group col-sm-10 col-sm-offset-1" style="padding:0px; ">
                            <span class="input-group-btn">
                                <button id="btn-lastmonth" type="button" class="btn btn-primary" style="float:right; width:60px" onclick="location.href='@Model.urlPrevBuilding'" title="Navigate to Previous Building" @Model.statusPrevBuilding>
                                    <span class="glyphicon glyphicon-chevron-left"></span>
                                </button>
                            </span>
                            <input type="text" class="form-control" value="@Model.bName" readonly="readonly" style="min-width:100%; text-align:center; font-weight:bold; font-size:x-large; padding:0px">
                            <span class="input-group-btn">
                                <button id="btn-nextmonth" type="button" class="btn btn-primary" style="float:right; width:60px" onclick="location.href='@Model.urlNextBuilding'" title="Navigate to Next Building" @Model.statusNextBuilding>
                                    <span class="glyphicon glyphicon-chevron-right"></span>
                                </button>
                            </span>
                        </div>
                    </div>@* <----------- Navigation Field by Building*@
                    <div class="row" style="margin-bottom:10px; padding:0px;">
                        <div class="input-group col-sm-10 col-sm-offset-1" style="padding:0px;">
                            <span class="input-group-btn" style="padding:0px;">
                                <button id="btn-lastmonth" type="button" class="btn btn-primary" style="float:right; width:60px;" onclick="location.href='@Model.urlPrevPeriod'" title="Navigate to Previous Building" @Model.statusPrevPeriod>
                                    <span class="glyphicon glyphicon-chevron-left"></span>
                                </button>
                            </span>
                            @*<span style="min-width:100%; text-align:center; vertical-align:middle; font-size:large; padding:0px">Period: @Model.year</span>*@
                            <input type="text" class="form-control" value="@Model.year" readonly="readonly" style="min-width:100%; text-align:center; font-weight:bold; font-size:large; padding:0px">
                            <span class="input-group-btn">
                                <button id="btn-nextmonth" type="button" class="btn btn-primary" style="float:right; width:60px;" onclick="location.href='@Model.urlNextPeriod'" title="Navigate to Next Building" @Model.statusNextPeriod>
                                    <span class="glyphicon glyphicon-chevron-right"></span>
                                </button>
                            </span>
                        </div>
                    </div>@* <----------- Navigation Field by Year *@
                </div>
            </div>
        </div> <!-- END OF PANEL HEADER -->
    <div class="panel-body" style="margin:2px; padding:5px; background-color: #fefefe">
        <div class="row" style="border:1px solid lightgray; border-radius: 5px; margin: 0; padding:0; "> 
                <table class="" style="width:100%;">
                    <tr class="rowHeader">  <!-- HEADERS/TITLES ROW -->
                        <td class="buildingCol" style="width:16.66%">
                            <span style="font-weight:bold"> @Model.buildingHeadings.rowName</span>
                        </td>
                        <td class="buildingCol" style="width:8.33%; background-color: #bbedff">
                            Goal
                        </td>
                        @foreach (REDZONE.Models.MeasuredCellEntity dscBldngHdr in @Model.buildingHeadings.entityMetricCells)
                        {
                            if (dscBldngHdr.isViewable)
                            {
                                <td class="buildingCol" style="width:@Model.metricColWidth">
                                    @dscBldngHdr.metricName
                                    @if (@dscBldngHdr.cellStatus.Equals("Mixed") || @dscBldngHdr.cellStatus.Equals("Open"))
                                    { 
                                        <span style="color:red">*</span>                                    
                                    }
                                </td>
                            }
                        }
                        <td class="buildingCol" style="width:8.33%;">
                            Goals Missed
                        </td>
                    </tr>  <!-- END OF HEADERS/TITLES ROW -->

                    <!-- Begin loop sections of Building Metric Rows -->
                    @foreach (var buildingRow in Model.metricRows)
                    {
                        colCounter = 0;
                        <tr class="buildingRow">
                            <td class="buildingCol" style="width:16.66%">
                                <a href="@buildingRow.rowURL">@buildingRow.rowName</a>
                            </td> <!-- Metric Name Column -->
                            <td class="buildingCol" style="width:8.33%; background-color: #bbedff; color:blue; font-weight:bold;">
                                @buildingRow.scoreGoal
                            </td> <!-- Goal Column -->
                            @foreach (REDZONE.Models.MeasuredCellEntity buildingCell in buildingRow.entityMetricCells)
                            {
                                bool cellIsViewable = Model.buildingHeadings.entityMetricCells[colCounter].isViewable;
                                if (cellIsViewable)
                                {
                                    <td id="@buildingCell.cellValueId" class="buildingCol valueCell @buildingCell.displayClass" style="width:@Model.metricColWidth" title="MPid=@buildingCell.mtrc_period_id MPvalId=@buildingCell.cellValueId">
                                        <input type="hidden" id="mpId" value="@buildingCell.mtrc_period_id" />
                                        @*@Model.metricColWidth*@
                                        @if (String.IsNullOrEmpty(@buildingCell.metricValue))
                                        { <br /> }
                                        else
                                        { @buildingCell.metricValue }
                                    </td>
                                }
                                colCounter++;
                            }
                            <td class="buildingCol scoreCol @buildingRow.displayClass" style="width:8.33%; color:black; font-weight:bold">
                                @buildingRow.redTotals
                            </td>
                        </tr>
                    }  @*  <------- End of BuildingRow Rows Section ---- *@

                    <tr class="buildingRow totalsRow">
                        <td class="buildingCol " style="width:16.66%">
                            @*@Model.buildingScoreRow.rowName*@
                            Building Score
                        </td><!-- Metric Name Column -->
                        <td class="buildingCol " style="width:8.33%; ">
                            <br />
                        </td><!-- Goal Column -->
                        @foreach (REDZONE.Models.MeasuredCellEntity buildingCell in Model.buildingScoreRow.entityMetricCells)
                        {
                            if (buildingCell.isViewable)
                            {
                                <td class="buildingCol @buildingCell.displayClass" style="width:@Model.metricColWidth">
                                    @if (String.IsNullOrEmpty(@buildingCell.metricValue))
                                    { <br /> }
                                    else
                                    { @buildingCell.metricValue }
                                </td>
                            }
                        }
                        <td class="buildingCol scoreCol" style="width:8.33%;">
                            <br />
                        </td>
                    </tr> <!-- End of Total Goals Missed Data Section -->

                </table>
        </div> <!-- End of DIV Table Table -->

        <div class="row" style="border:none; margin: 0; padding:0; ">
            <table class="" style="border:none; width:100%;">
                <tr class="" style="border:none">   <!-- ACTIONS ROW   -->
                    <td class=" " style="width:16.66%; border:none">
                        <br />
                    </td>
                    <td class="" style="width:8.33%; border:none">
                        <br />
                    </td>
                    @{colCounter = 0;}
                    @foreach (REDZONE.Models.MeasuredCellEntity actionCell in Model.buildingActionsRow.entityMetricCells)
                    {
                        bool cellIsViewable = Model.buildingHeadings.entityMetricCells[colCounter].isViewable;
                        if (cellIsViewable)
                        {
                            <td class="" style="border:none; width:@Model.metricColWidth">
                                @*@if (String.IsNullOrEmpty(@actionCell.metricValue) || Model.buildingScoreRow.entityMetricCells[colCounter].score < 3 )*@
                                @if (String.IsNullOrEmpty(@actionCell.metricValue) || !actionCell.isViewable || Model.buildingScoreRow.entityMetricCells[colCounter].score < 3)
                                { <br /> }
                                else
                                {
                                    @*<a href="@actionCell.cellValueURL" style="color:red; ">@actionCell.metricValue</a>*@
                                    <a href="@actionCell.cellValueURL" target="_blank" style="color:red;" title="Click to open Google Action Form on a new Browser Tab">Action Required<br />[ Click Here ]</a>
                                    <br />
                                    @*<text>Total Closed: @actionCell.score</text>*@
                                }
                            </td>
                        }
                        colCounter++;
                    }
                    <td class="" style="width:8.33%; border:none">
                        <br />
                    </td>
                </tr> <!-- ACTIONS ROW END -->
            </table>
        </div> <!-- End of Actions Row -->
        <div class="row" style="border:none; margin: 0; padding:0; text-align:left">
            <span style="color:red; margin-left:5px">*</span><span style="font-weight:bold"> Metrics for this month have not been finalized</span> 
            <br /><br />
        </div>

            <!-- ***************************** PAGE DATA AND CALENDAR SECTION *********************************************  -->
            <div class="row" style="margin:10px 0px;">
                <div class="col-sm-5 ">
                    <div class="row actions-th" style="background-color:#f5f5f5">
                        Actions Required by Building Score
                    </div>
                    <div class="row" style="margin: 8px 10px 0px 10px; ">
                        <table class="table-bordered" style="margin:0;">
                            <tr>
                                <td style="background-color:#f9f97f; font-weight:bold; font-size:x-large; padding:10px; vertical-align:middle; width:25%;">3 Red</td>
                                <td style="text-align: left; padding-left:15px;">
                                    <span style="">Action Plan form required on individual red metrics from the Building Lead (click actionable link)</span>
                                </td>
                            </tr>
                            <tr>
                                <td style="background-color:orange; font-weight:bold; font-size:x-large; padding:10px; vertical-align:middle; width:25%;">4 Red</td>
                                <td style="text-align: left; padding-left:15px;">
                                    <span style="">Above plus, monthly group meetings required led by appropiate Corporate Resource for each red metric (See schedule)</span>
                                </td>
                            </tr>
                            <tr>
                                <td style="background-color:#f75643; font-weight:bold; font-size:x-large; padding:10px; vertical-align:middle; width:25%;">5+ Red</td>
                                <td style="text-align: left; padding-left:15px;">
                                    <span style="">Above Plus, LC Review at Supply Chain Council</span>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="col-sm-7">
                    <div class="row actions-th" style="background-color:#f5f5f5">
                        Meeting Date and Times
                    </div>
                    <div class="row" style="margin: 8px 10px 0px 10px; ">
                        <table class="bordered table-bordered" style="margin:0; width:100%;">
                            <thead>
                                <tr>
                                    <th style="text-align:center; width:20%">Metric</th>
                                    <th style="text-align:center; width:20%">Corporate Resource</th>
                                    <th style="text-align:center; width:20%">Meeting Date</th>
                                    <th style="text-align:center; width:40%">Meeting Time (CST)</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr style="padding:0">
                                    <td style="width:20%">POP/Net FTE</td>
                                    <td style="width:20%">Christina Dempsey</td>
                                    <td style="width:20%">@*08/15/2016*@</td>
                                    <td style="width:40%">@*10:00 AM*@</td>
                                </tr>
                                <tr class="bordered-r">
                                    <td>Turnover</td>
                                    <td>Mona Mounts</td>
                                    <td>@*08/14/2016*@</td>
                                    <td>@*10:00 AM*@</td>
                                </tr>
                                <tr>
                                    <td>OT</td>
                                    <td>Christina Dempsey</td>
                                    <td>@*08/12/2016*@</td>
                                    <td>@*10:00 AM*@</td>
                                </tr>
                                <tr>
                                    <td>Trainees</td>
                                    <td>Mona Mounts</td>
                                    <td>@*08/14/2016*@</td>
                                    <td>@*10:00 AM*@</td>
                                </tr>
                                <tr>
                                    <td>Safety</td>
                                    <td>Joe Smiesko</td>
                                    <td>@*08/19/2016*@</td>
                                    <td>@*10:00 AM*@</td>
                                </tr>
                                <tr>
                                    <td>IT Tickets</td>
                                    <td>Pete Kuranchie</td>
                                    <td>@*08/18/2016*@</td>
                                    <td>@*10:00 AM*@</td>
                                </tr>
                                <tr>
                                    <td>Financial</td>
                                    <td>Steve Pignataro</td>
                                    <td>N/A</td>
                                    <td>N/A</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div> <!-- END OF ACTIONS AND MEETING SCHEDULE PANEL -->
        </div> <!-- END OF PANEL BODY -->
    </div><!-- END OF PANEL -->
</div> <!-- ROW END -->


<!-- START OF RIGHT CLICK CONTEXT MENU -->
<nav id="context-menu" class="context-menu">
    <ul class="context-menu__items">
        <li class="context-menu__item">
            <a href="#" class="context-menu__link" data-action="Manage">
                <i class="fa fa-eye"></i> Manage Reason
            </a>
        </li>
        <li class="context-menu__item">
            <a href="#" class="context-menu__link" data-action="Menu2">
                <i class="fa fa-edit"></i>  Menu Item 2
            </a>
        </li>
        <li class="context-menu__item">
            <a href="#" class="context-menu__link" data-action="Menu3">
                <i class="fa fa-times"></i>  Menu Item 3
            </a>
        </li>
    </ul>
</nav>  <!-- END OF RIGHT CLICK CONTEXT MENU -->

<script>
    $(document).ready(function () {
        $(".menuItem").removeClass("menuSelected");
        $("#mDashboard").addClass("menuSelected");


        //=========================

        "use strict";
        //document.addEventListener("contextmenu", function (e) {
        //    console.log(e);
        //});

        var taskItemClassName = 'valueCell';
        //var menu = document.querySelector("context-menu");    // --- The html representation of our menu ---
        var menu = document.getElementById("context-menu");    // --- Object with the html representation of our menu ---
        var menuState = 0;
        //var activeClassName = "context-menu--active";         ///_---------------NEED THIS DEFINED --------------
        var menuPosition;
        var menuPositionX;
        var menuPositionY;
        var taskItemInContext;      //Item that was right clicked and it's of the right class to handle the context menu event
        var contextMenuClassName = "context-menu";
        var contextMenuItemClassName = "context-menu__item";
        var contextMenuLinkClassName = "context-menu__link";
        var contextMenuActive = "context-menu--active";     ///_---------------NEED THIS DEFINED --------------

        init();

        /*** Initialise our application's code. */
        function init() {
            contextListener();
            clickListener();
            keyupListener();
        }

        function elementRightClicked(e, className) {

            var el = e.srcElement || e.target;
            //alert("Right Click: (" + className + ")" + el.classList[0].toString());
            if (el.classList.contains(className)) {
                return el;
            } else {
                while (el = el.parentNode) {
                    if (el.classList && el.classList.contains(className)) {
                        return el;
                    }
                }
            }
            return false;
        }

        function contextListener() {
            document.addEventListener("contextmenu", function (e) {
                taskItemInContext = elementRightClicked(e, taskItemClassName);

                if (taskItemInContext) {
                    e.preventDefault();
                    positionMenu(e);
                    toggleMenuOn();
                }
                else {
                    taskItemInContext = null;
                    toggleMenuOff();
                }
            });
        }

        function toggleMenuOn() {
            if (menuState !== 1) {
                //$("#context-menu").show();
                menuState = 1;
                //menu.addClass(contextMenuActive);
                menu.classList.add(contextMenuActive);
            }
        }

        function toggleMenuOff() {
            if (menuState !== 0) {
                menuState = 0;
                //menu.removeClass(contextMenuActive);
                menu.classList.remove(contextMenuActive);
            }
        }

        function clickListener() {
            document.addEventListener("click", function (e) {
                var clickeElIsLink = elementRightClicked(e, contextMenuLinkClassName);

                if (clickeElIsLink) {
                    //If what was clicked is a link of class "context-menu__link"
                    e.preventDefault();
                    menuItemListener(clickeElIsLink);
                } else {
                    var button = e.which || e.button;
                    if (button === 1) {
                        toggleMenuOff();
                    }
                }
            });


        }

        function keyupListener() {
            window.onkeyup = function (e) {
                if (e.keyCode === 27) {
                    toggleMenuOff();
                }
            }
        }
        function getPosition(e) {
            var posx = 0;
            var posy = 0;

            if (!e) var e = window.event;

            if (e.pageX || e.pageY) {
                posx = e.pageX;
                posy = e.pageY;
            } else if (e.clientX || e.clientY) {
                posx = e.clientX + document.body.scrollLeft +
                                   document.documentElement.scrollLeft;
                posy = e.clientY + document.body.scrollTop +
                                   document.documentElement.scrollTop;
            }

            return {
                x: posx,
                y: posy
            }
        }
        function positionMenu(e) {

            var menuWidth;
            var menuHeight;
            var windowWidth;
            var windowHeight;
            var clickCoords;
            var clickCoordsX;
            var clickCoordsY;

            clickCoords = getPosition(e);
            clickCoordsX = clickCoords.x;
            clickCoordsY = clickCoords.y;
            //alert("Current pos is: x=" + clickCoordsX + " y=" + clickCoordsY);
            menuWidth = menu.offsetWidth + 4; //$("#context-menu").width + 4; //menu.offsetWidth + 4;            // To allow 4 px of padding from the screen edge if needed
            menuHeight = menu.offsetHeight + 4; //$("#context-menu").height + 4;       //  menu.offsetHeight + 4;
            windowWidth = window.innerWidth;
            windowHeight = window.innerHeight;

            // If the menu will display outside the screen recalculate the position so it gets moved to within the screen window
            if ((windowWidth - clickCoordsX) < menuWidth) {
                //menu.css({ left: (windowWidth - menuWidth) });
                menu.style.left = windowWidth - menuWidth + "px";
            } else {
                //menu.css({ left: clickCoordsX });
                menu.style.left = clickCoordsX + "px";
            }

            if ((windowHeight - clickCoordsY) < menuHeight) {
                //menu.css({ top: (windowHeight - menuHeight) });
                menu.style.top = windowHeight - menuHeight + "px";
            } else {
                //menu.css({ top: clickCoordsY });
                menu.style.top = clickCoordsY + "px";
            }
        }

        //This function can turn the menu off when windows is being resized
        function resizeListener() {
            window.onresize = function (e) {
                toggleMenuOff();
            };
        }
        function menuItemListener(link) {
            //convert jscript object clicked into jQuery Object (For ease of data retrieval)
            var $cellClicked = $("#" + taskItemInContext.getAttribute("id"));  // Object (CELL) that was right clicked
            var mpId = $cellClicked.children("#mpId").first().val();
            var mpValueId = taskItemInContext.getAttribute("id");
            var contextMenuOption = link.getAttribute("data-action");
            if (mpValueId == null) {
                mpId = "0";
                mpValueId = "0"
            }
            console.log("Task ID - " +
                          taskItemInContext.getAttribute("data-id") +
                          ", Task action - " + link.getAttribute("data-action"));
            toggleMenuOff();
            if (contextMenuOption == "Manage") {
                alert('Submitting "' + contextMenuOption + '" Action for:\nMetric Period: ' + mpId + '\nMP Value Id: ' + mpValueId);
                window.location.href = "/MPVreasons/Assigment/" + mpValueId + "?mpId=" + mpId;
            }
            else {
                alert("This menu oprion is not yet Enabled.");
            }
        }
    });
</script>

