@model REDZONE.Models.ExecutiveSummaryViewModel

@{
    ViewBag.Title = "Executive Monthly Summary";
}
<!-- Calculate the actual width of each column (72% / Number of metrics in the View) -->
@{
    double colWidth = .72 / Model.allMetrics.Count;
    string strColWidth = colWidth.ToString("00.00%");
    string btnClassBldng = (ViewData["bntClassB"] == null) ? "" : ViewData["bntClassB"].ToString();
    string btnClassScore = (ViewData["bntClassS"] == null) ? "" : ViewData["bntClassS"].ToString();
    string applyFilter = (Session["buildingFilter"] != null && (string)Session["buildingFilter"] == "Y") ? "checked" : "";
    string panelHeight = (applyFilter == "checked") ? "med-height" : "full-height";
    //string vScrollStatus = "scroll";  //or "hidden"
    string vScrollStatus = (applyFilter.Equals("checked")) ? "hidden" : "scroll";
}

<link href="http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">
<link href="~/Content/RedZoneApp.css" rel="stylesheet" />
<link href="~/Content/RZ_Effects.css" rel="stylesheet" />

<style>
    .scroll-Table {
        font-weight: bold;
        font-size: small;
        text-align: center;
    }

    .scroll-Head {
        padding: 0px;
        background-color: #f0eaea;
        overflow-x: hidden;
    }

    .scroll-Body {
        padding: 0px;
        height: 560px;
        overflow-x: hidden;
    }
    .scroll-Footer {
        padding: 0px;
        background-color: #fbfbfb;
        overflow-x: hidden;
    }
    .full-height {
        height: 500px;
    }
    .med-height {
        height: 200px;
    }

</style>
<div class="row" style="font-family:Arial; margin-top: 5px; ">
    <!-- MAIN SCREEN PANEL -->
    <div class="panel panel-default" style="margin-bottom:0px; ">
        <div class="panel-heading" style="text-align:center; padding: 0px 15px; ">
            <div class="row">
                <div class="col-sm-2" style="text-align:left; padding:0; padding-left:10px">
                    @if (Model.canFilterBuildings)
                    {
                        <div style="margin:0; padding:0; margin-top:38px">
                            <label class="switch" style="display:inline-block; margin:0;">
                                <input class="switch-input" id="chkMyBuildingsOnly" type="checkbox" @applyFilter />
                                <span class="switch-label" data-on="Y" data-off="N"></span>
                                <span class="switch-handle"></span>
                            </label>
                            <span class="" style="font-size:12px; margin:0; padding:0; padding-top:5px; display:inline-block">View my Buildings Only</span>
                        </div>
                        @*<div class="checkbox" style="padding-left:30px; padding-top:38px">
                                <label class="" style="text-align:left; padding:0; font-size: .8em">
                                    <input id="chkMyBuildingsOnly" type="checkbox" value="" @applyFilter>
                                    <span class="cr"><i class="cr-icon glyphicon glyphicon-ok" style="color: hsl(240, 45%, 40%); font-weight:bold"></i></span>
                                    <span id="chkText" style="font-size:12px">View my Buildings Only</span>
                                </label>
                          </div>
                        *@
                    }
                </div>
                <div class="col-sm-8">
                    <div class="row ">
                        <span style="font-size:x-large; font-weight:bold; color:darkblue">Executive Monthly Summary</span>
                    </div>
                    <div class="row" style="margin-bottom:10px">
                        <div class="input-group col-sm-10 col-sm-offset-1" style="padding:0px; ">
                            <span class="input-group-btn">
                                <button id="btn-lastmonth" type="button" class="btn btn-primary" style="float:right; width:60px; height:34px" onclick="location.href='@Model.urlPrevMonth'" title="Navigate to Previous Month" @Model.statusPrevMonth>
                                    <span class="glyphicon glyphicon-chevron-left"></span>
                                </button>
                            </span>
                            <input type="text" class="form-control" value="@Model.month @Model.year" readonly="readonly" style="min-width:100%; text-align:center; font-weight:bold; font-size:x-large; padding:0px">
                            <span class="input-group-btn">
                                <button id="btn-nextmonth" type="button" class="btn btn-primary" style="float:right; width:60px; height:34px" onclick="location.href='@Model.urlNextMonth'" title="Navigate to Next Month" @Model.statusNextMonth>
                                    <span class="glyphicon glyphicon-chevron-right"></span>
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-sm-2">

                </div>
            </div>
        </div>
        <div class="panel-body" style="margin:2px; padding:5px">
            @if (Model.buildings.Count() == 0)
            {
                <br />
                <div class="row" style="color:red; font-size:large; border:4px double black; margin:5px 15px; padding:40px; background-color: lightgray; border-radius:8px">
                    <span style="font-weight:bold; ">THERE IS NO DATA AVAILABLE FOR THE SELECTED PERIOD</span>
                    <br /><span style="text-align:center">@Model.month @Model.year</span>
                    <br /><br />
                    <span style="color:gray; font-size:14px">< Use the 'Left' and 'Right' Arrows to Select a Different Month to View ></span>
                </div>
                <br />
            }
            else
            {
            <!-- Table -->

                <div class="panel panel-default scroll-Table  hidden-xs">
                <!-- INNER PANEL WITH METRIC BUILDING INFORMATION -->
                    <div class="panel-heading scroll-Head" style="overflow-y: @vScrollStatus">
                        <div class="row " style="margin:0; padding:0">
                            <table class="metricTable" style="margin:0; width:100%">
                                <tr style="background-color: #f0eaea; border-bottom:1px solid lightgray">
                                    <td style="vertical-align:middle; width:17%">
                                        <input class="sortOrder" type="hidden" id="bSortOrder" value="@ViewData["bOrder"]" />
                                        <span style="font-weight:bold; margin-left:30px;">Building</span>
                                        <button type="button" class="btn btn-sm sortButton @btnClassBldng" aria-label="Sort by" style="padding:0px 2px; float:right; margin-right:8px">
                                            <span class="glyphicon @ViewData["bIcon"]" aria-hidden="true"></span>
                                        </button>
                                    </td>
                                    @foreach (var m in Model.allMetrics)
                                    {
                                        <td title="@m.metricDescription" style="vertical-align:middle; width: @strColWidth ">
                                            <a href="@m.url">@m.metricName</a>
                                        </td>
                                    }
                                    <td style="vertical-align:middle; width:11%; padding-right:13px">
                                        <input class="sortOrder" type="hidden" id="sSortOrder" value="@ViewData["sOrder"]" />
                                        Building Score
                                        <button type="button" class="btn btn-sm sortButton @btnClassScore" aria-label="Sort by" style="padding:0px 2px; float:right">
                                            <span class="glyphicon @ViewData["sIcon"]" aria-hidden="true"></span>
                                        </button>
                                    </td>
                                </tr>  <!-- ****** END OF HEADER TITLES ROW *************** -->

                                <tr style="background-color: #bbedff; border-bottom:1px solid black">
                                    <td style="vertical-align:middle; width:17%">
                                        <span style="font-weight:bold"> @Model.goalsRow.BuildingName</span>
                                    </td>
                                    @foreach (REDZONE.Models.MeasuredCellEntity bldngMV in Model.goalsRow.entityMetrics)
                                    {
                                        <td style="color:blue; font-weight:bold; vertical-align:middle; width: @strColWidth ">
                                            @HttpUtility.HtmlDecode(bldngMV.metricValue)
                                        </td>
                                    }
                                    <td style="vertical-align:middle; width:11%;">
                                        <br />
                                    </td>

                                </tr>  <!-- ****** END OF METRIC GOALS ROW  *************** -->
                            </table>
                        </div>
                    </div> @* ----------------END OF HEADER METRIC TABLE PANEL ----------------------- *@


                    <!--  ******** START OF BUILDING DETAIL SECTION ****************************************************************-->
                    <div class="panel-body scroll-Body @panelHeight" style="overflow-y: @vScrollStatus">
                        <div class="row " style="margin:0; padding:0">
                            <table class="metricTable" style="margin:0; width:100%">
                                @foreach (REDZONE.Models.BuildingMetricEntity dscBldng in Model.buildings)
                                {
                                    <tr class="rHover" style="border-bottom:1px solid #c6c4c4;">
                                        <td style="vertical-align:middle; width:17%">
                                            <a href="@dscBldng.url">@dscBldng.BuildingName</a>
                                        </td>
                                        @foreach (REDZONE.Models.MeasuredCellEntity bldngMV in dscBldng.entityMetrics)
                                        {
                                            <td class="@bldngMV.displayClass" style="vertical-align:middle; width: @strColWidth ">
                                                @if (String.IsNullOrEmpty(@bldngMV.metricValue))
                                                { <br /> }
                                                else
                                                { @bldngMV.metricValue }
                                            </td>
                                        }
                                        <td class="scoreCol  @dscBldng.scoreDisplayClass" style=" vertical-align:middle; width:11%;">
                                            @dscBldng.rowScore
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>  
                    </div> <!-- *********** END OF BUILDING ROWS DATA SECTION ************** -->


                    <div class="panel-footer scroll-Footer" style="overflow-y: @vScrollStatus">
                        <div class="row " style="margin:0; padding:0">
                            <table style="margin:0; width:100%">
                                <tr totalsrow>
                                    <td style="vertical-align:middle; width:17%; ">
                                        <span>@Model.goalsMissedRow.BuildingName</span>
                                    </td>
                                    @foreach (REDZONE.Models.MeasuredCellEntity metricTotalCell in Model.goalsMissedRow.entityMetrics)
                                    {
                                        <td style="vertical-align:middle; width: @strColWidth ">
                                            @metricTotalCell.score.ToString("0")
                                        </td>
                                    }
                                    <td class="@Model.goalsMissedRow.scoreDisplayClass" style="vertical-align:middle; width:11%;">
                                        @Model.total
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>  <!-- *********** END OF FOOTER ROW (ROW TOTALS) ************  -->


                </div>

            <!-- **************************** EXTRA SMALL DISPLAY ********************************** -->
                foreach (REDZONE.Models.BuildingMetricEntity dscBldng in Model.buildings)
                {
                    <div class="panel panel-default visible-xs" style="margin-right:12px; width:100%">
                        <div class="panel-heading" style="padding:3px; background-color:black; font-weight:bold">
                            <a href="@dscBldng.url" style="color:white">@dscBldng.BuildingName</a>
                        </div>
                        <div class="panel-body" style="padding:3px;">
                            @{int indexCounter = 0;}
                            @foreach (REDZONE.Models.MeasuredCellEntity metricCell in dscBldng.entityMetrics)
                            {
                                <div class="row " style="margin:0; padding:0; border-bottom:1px solid lightgray">
                                    <div class="col-xs-4 " style="text-align:left;">
                                        <a href="@Model.allMetrics[indexCounter].url">@Model.allMetrics[indexCounter].metricName</a>
                                    </div>
                                    <div class="col-xs-3 @metricCell.displayClass">
                                        @if (String.IsNullOrEmpty(@metricCell.metricValue))
                                        { <br /> }
                                        else
                                        { @metricCell.metricValue }
                                    </div>
                                    <div class="col-xs-2 " style="text-align:right; font-weight:bold; background-color: #bbedff">Goal:</div>
                                    <div class="col-xs-3" style="background-color: #bbedff;">@Model.goalsRow.entityMetrics[indexCounter].metricValue</div>
                                </div>
                                        indexCounter++;
                            }
                            <div class="" style="">
                                <div class="col-xs-4 @dscBldng.scoreDisplayClass" style="text-align:right;">
                                    <span style="font-weight:bold">Building Score:</span>
                                </div>
                                <div class="col-xs-3 @dscBldng.scoreDisplayClass" style="height:100%; font-weight:bold; ">
                                    @dscBldng.rowScore
                                </div>
                                <div class="col-xs-2 @dscBldng.scoreDisplayClass" style="text-align:right; font-weight:bold;"><br /></div>
                                <div class="col-xs-3 @dscBldng.scoreDisplayClass" style=""><br /></div>
                            </div>


                        </div>
                    </div>
                }
        <!-- ********************** END OF EXTRA SMALL DISPLAY VIEW **************************** -->
            }
        </div>
    </div>
</div>
<br /><br />

<script>
    $(document).ready(function () {
        $(".menuItem").removeClass("menuSelected");
        $("#mDashboard").addClass("menuSelected");

        $(".sortButton").click(function () {
            var sort_param = $(this).parent().find(".sortOrder").first().val();
            //var current_params = window.location.search;
            var current_year = getURLParameter("year");
            var current_month = getURLParameter("month");
            var url_parameters = "";
            //alert("Sort parameter is: " + sort_param);

            if (current_year != "") {
                url_parameters = "?month=" + current_month + "&year=" + current_year + "&";
            }
            else {
                url_parameters = "?"
            }

            var gotoURL = "/Home/Index/" + url_parameters + "sortOrder=" + sort_param;
            //alert(gotoURL);
            location.href = gotoURL;
        });

        $('#chkMyBuildingsOnly').change(function () {
            var filter = ($(this).prop("checked") ? "Y" : "N");

            //$('.scroll-Body').hide();
            //$('#divWait').show();

            $.ajax({
                url: '/Account/setUserBuildingFilter',
                method: "POST",
                cache: false,
                data: { bFilter: filter },
                //contentType: "application/json; charset=utf-8",
                //dataType: "json",
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Failed to Set the User Building Filter.\nError:" + textStatus + "," + errorThrown);  //<-- Trap and alert of any errors if they occurred
                }
            }).done(function (d) {
                if (d == "Success") {
                    //alert("Filter was successfully set to '" + filter + "' on the Server Side");
                    location.reload();
                } else {
                    alert("Failed to set the Server Filter Flag:" + d);
                }
            });


            //if (filter == "Y") {
            //    alert("Checked!");
            //}
            //else {
            //    alert("Unchecked...");
            //}
            //location.href = "/Home/Index?filter=" + filter;
        });

        function getURLParameter(name) {
            var parameterValue = decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search) || [null, ''])[1].replace(/\+/g, '%20')) || null;
            if (parameterValue == null) { parameterValue = "" };
            return parameterValue;
        }

    });
</script>