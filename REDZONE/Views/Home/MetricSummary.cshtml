@model REDZONE.Models.MetricSummaryViewModel
@{ ViewBag.Title = "Building Summary"; }
<link href="http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">
<link href="~/Content/RedZoneApp.css" rel="stylesheet" />
<style>
    .monthCol {
        width: 120px;
    }
    .valueCell {
        font-weight: bold;
        /*font-size:medium;*/
    }

    .scroll-Table {
        font-weight: bold;
        font-size: small;
        text-align: center;
        width: 99%;
    }
    .scroll-Head {
        padding: 0px;
        background-color: #f0eaea;
    }
    .scroll-Body {
        padding: 0px;
        height: 500px;
        overflow-y: auto;
        /*overflow-x: hidden;*/
    }
    .IEScroll{
        width:17px;
    }
    .notIEScroll{
        /*width:22px;*/
        width:17px;
    }



</style>

@{
    int colCounter = 0;
    string sortIcon = String.IsNullOrEmpty(Model.rowHeadings.displayClass) ? "glyphicon-sort" : Model.rowHeadings.displayClass.Equals("ASC") ? "glyphicon-sort-by-attributes" : "glyphicon-sort-by-attributes-alt";
    //string sortIcon = String.IsNullOrEmpty(dscBldngHdr.displayClass) ? "glyphicon-sort" : dscBldngHdr.displayClass.Equals("ASC") ? "glyphicon glyphicon-triangle-bottom" : "glyphicon glyphicon-triangle-top";
    string btnClass = String.IsNullOrEmpty(Model.rowHeadings.displayClass) ? "btn-default" : "btn-primary";
    string applyFilter = (Session["buildingFilter"] != null && (string)Session["buildingFilter"] == "Y") ? "checked" : "";
    double colWidth = .72 / Model.metricRows.Count;
    string strColWidth = colWidth.ToString("00.00%");
    strColWidth = "6%";
}

@if (String.IsNullOrEmpty(Model.metricID))
{
    <div style="margin-top:250px; color:red">
        <img src="~/Images/confused-emoticon.jpg" />
        <h2>Please Select a valid Metric </h2>
    </div>
}
else
{
    <div class="row" style="font-family:Arial; margin-top: 5px">
        <div class="panel panel-default" style="margin-bottom:0px; ">
            <div class="panel-heading" style="text-align:center; padding: 0px 15px; ">
                <div class="row">
                    <div class="col-sm-2" style="text-align:left; padding:0; padding-left:10px">
                        @if (Model.canFilterRows)
                    {
                        <div class="checkbox" style="padding-left:45px; padding-top:38px">
                            <label class="" style="text-align:left; padding:0; font-size: .8em">
                                <input id="chkMyBuildingsOnly" type="checkbox" value="" @applyFilter>
                                <span class="cr"><i class="cr-icon glyphicon glyphicon-ok" style="color: hsl(240, 45%, 40%); font-weight:bold"></i></span>
                                <span id="chkText" style="font-size:12px">View my Buildings Only</span>
                            </label>
                        </div>
                    }
                    </div>
                    <div class="col-sm-8">
                        <div class="row ">
                            <span style="font-size:x-large; font-weight:bold; color:darkblue">Metric Summary</span>
                        </div>
                        <div class="row " style="margin-bottom:10px">
                            <div class="input-group col-sm-10 col-sm-offset-1" style="padding:0px; ">
                                <span class="input-group-btn">
                                    <button id="btn-lastmonth" type="button" class="btn btn-primary" style="float:right; width:60px; height: 35px" onclick="location.href='@Model.urlPrevMetric'" title="Navigate to Previous Building">
                                        <span class="glyphicon glyphicon-chevron-left"></span>
                                    </button>
                                </span>
                                <input type="text" class="form-control" value="@Model.metricName @Model.year" readonly="readonly" style="min-width:100%; text-align:center; font-weight:bold; font-size:x-large; padding:0px; height:35px">
                                <span class="input-group-btn">
                                    <button id="btn-nextmonth" type="button" class="btn btn-primary" style="float:right; width:60px; height: 35px" onclick="location.href='@Model.urlNextMetric'" title="Navigate to Next Building">
                                        <span class="glyphicon glyphicon-chevron-right"></span>
                                    </button>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-2" style="padding-top:10px">
                        @*@if (Model.canFilterRows)
                            {
                                <input type="hidden" id="isFiltered" value="N" />
                                <button id="btnMyBuildings" style="box-shadow: inset 0px 1px 5px; border-radius:5px; float:right">
                                    <img src="~/images/mybuildings.png" style="width:80px;height:35px;" /><br />
                                    <span style="font-size:11px;">My Buildings Only</span>
                                </button>
                            }*@
                    </div>
                </div>
            </div>
            <div class="panel-body" style="margin:2px; padding:5px; background-color: #fefefe">












                <!-- *********************** DIV to Hold the Main Body Metric Building DATA TABLE ************************ -->
                <div class="panel panel-default scroll-Table" style="margin:0; padding:0">
                
                    <!-- (((((((((((  HEADERS ROW "TITLES" and "GOASL" ROWS ))))))))))))))) -->
                    <div class="panel-heading scroll-Head " style="margin:0; padding:0">
                        <div class="row " style="margin:0; padding:0">
                            <table style="margin:0; width:100%;">
                                <!-- ******************* TABLE HEADER ROW ********************** -->
                                <tr style="background-color: #f0eaea; border-bottom:1px solid lightgray">
                                    <td>
                                        <table style="width:100%">
                                            <tr>
                                                <td style="vertical-align:middle; min-width:183px; max-width:183px; width:17%; font-weight:bold;">
                                                    @*class="col-sm-2 buildingCol headerCol"*@
                                                    <input type="hidden" id="sortMonth" value="Building" />
                                                    <input type="hidden" id="sortOrder" value=@Model.rowHeadings.displayClass />
                                                    <span style="font-weight:bold;"> @Model.rowHeadings.rowName</span>
                                                    <button type="button" class="btn btn-sm sortButton @btnClass" aria-label="Sort by" style="padding:0px 2px; float:right">
                                                        <span class="glyphicon @sortIcon" aria-hidden="true"></span>
                                                    </button>
                                                </td>
                                                @*@foreach (REDZONE.Models.MeasuredCellEntity dscBldngHdr in @Model.rowHeadings.entityMetricCells)
                                    {
                                        dscBldngHdr.isViewable = true;   //Set (Hardcode) all the available Month Headers as Viewable
                                    }*@
                                                @foreach (REDZONE.Models.MeasuredCellEntity dscBldngHdr in @Model.rowHeadings.entityMetricCells)
                                            {
                                                sortIcon = String.IsNullOrEmpty(dscBldngHdr.displayClass) ? "glyphicon-sort" : dscBldngHdr.displayClass.Equals("ASC") ? "glyphicon-sort-by-attributes" : "glyphicon-sort-by-attributes-alt";
                                                btnClass = String.IsNullOrEmpty(dscBldngHdr.displayClass) ? "btn-default" : "btn-primary";
                                                if (dscBldngHdr.isViewable || true)
                                                {  //Always Display Column
                                                <td class="buildingCol " @*monthCol*@ style="min-width:70px; width:@strColWidth; ">
                                                    <input type="hidden" id="sortMonth" value="@dscBldngHdr.metricName" />
                                                    <input type="hidden" id="sortOrder" value="@dscBldngHdr.displayClass" />
                                                    <span style="font-weight:bold">@dscBldngHdr.metricMonth</span>
                                                    @if (dscBldngHdr.score > 0)
                                                        {
                                                        <button type="button" class="btn btn-sm sortButton @btnClass" aria-label="Sort by" style="padding:0px 2px; float:right">
                                                            <span class="glyphicon @sortIcon" aria-hidden="true"></span>
                                                        </button>
                                                        }
                                                </td>
                                                }
                                                colCounter++;
                                            }
                                                <td class="buildingCol " style="vertical-align:middle; width:11%;">
                                                    @*class="buildingCol scoreCol"*@
                                                    Goals Missed
                                                </td>
                                            </tr>
                                        </table>
                                    </td>
                                    <td class="scroll-Offset"></td>
                                </tr> <!-- ---------- END OF HEADER TITLES ROW -----------------    -->

                                <tr class="" style="border-bottom: 1px solid black; background-color: #bbedff; width:100%">
                                    <td>
                                        <table style="width:100%">
                                            <tr>
                                                <td style="vertical-align:middle; min-width:183px; max-width:183px; width:17%; font-weight:bold; ">
                                                    @*class="col-sm-2 buildingCol headerCol"*@
                                                    @Model.rowGoal.rowName
                                                </td>
                                                @{colCounter = 0;}
                                                @foreach (REDZONE.Models.MeasuredCellEntity bldngMV in Model.rowGoal.entityMetricCells)
                                            {
                                                bool cellIsViewable = Model.rowHeadings.entityMetricCells[colCounter].isViewable;
                                                cellIsViewable = true;  //Always Display Column
                                                //if (bldngMV.isViewable)
                                                if (cellIsViewable)
                                                {
                                            <td class="buildingCol " style="color:blue; font-weight:bold; vertical-align:middle; min-width:70px; width: @strColWidth;">
                                                @*class=monthCol*@
                                                @if (String.IsNullOrEmpty(@bldngMV.metricValue))
                                                        { <br /> }
                                                        else
                                                        { @HttpUtility.HtmlDecode(bldngMV.metricValue) }
                                            </td>
                                                }
                                                colCounter++;
                                            }

                                                <td class="buildingCol " style="vertical-align:middle; width:11%;">
                                                    @*class="buildingCol scoreCol"*@
                                                    <br />
                                                </td>
                                            </tr>  <!-- ---------------- Enf of ROW for Months Titles -----------------------  -->
                                        </table>
                                    </td>
                                    <td class="scroll-Offset"></td>
                                </tr> <!-- ------------------- METRIC GOALS ROW END ----------------- -->
                            </table>
                        </div>
                    </div>

                    <!-- (((((((((((  SCROLLABLE BUILDING ROWS DETAIL PANEL ))))))))))))))) -->
                    <div class="panel-body scroll-Body" style="margin:0; padding:0">
                        <!-- BUILDING DATA ARRAY ROWS -->
                        <div class="row " style="margin:0; padding:0">
                            <table style="width:100%; margin:0">
                                @foreach (REDZONE.Models.MeasuredRowEntity buildingRow in Model.metricRows)
                                {
                                    colCounter = 0;
                                    bool allNAs = true;
                                <tr class="rHover" style="border-bottom: 1px solid #c6c4c4; width:100%">
                                    <td style="vertical-align:middle; min-width:220px; max-width:220px; width:220px;" title="@buildingRow.rowOwner">
                                        <a href="@buildingRow.rowURL">@buildingRow.rowName</a>
                                    </td>

                                    @foreach (REDZONE.Models.MeasuredCellEntity buildingCell in buildingRow.entityMetricCells)
                                        {
                                            bool cellIsViewable = Model.rowHeadings.entityMetricCells[colCounter].isViewable;
                                            if (cellIsViewable || true)
                                            {   //Always Display Column
                                        <td class="buildingCol valueCell @buildingCell.displayClass" style="vertical-align:middle; min-width:70px; width:@strColWidth;">
                                            @if (String.IsNullOrEmpty(@buildingCell.metricValue))
                                                    { <br /> }
                                                    else
                                                    {
                                                        if (!buildingCell.metricValue.Equals("N/A")) { allNAs = false; }
                                                    @buildingCell.metricValue
                                                    }
                                        </td>
                                            }
                                            colCounter++;
                                        }
                                    <td class="buildingCol scoreCol" style=" vertical-align:middle;">
                                        @if (allNAs)
                                            { <text>---</text>}
                                            else
                                            { @buildingRow.redTotals }
                                    </td>
                                </tr>
                                }
                            </table>
                        </div><!-- ---------- END OF BUILDINGS SCROLLABLE PANEL ------------------- -->
                    </div>
                
                    <!-- (((((((((((  FOOTER/TOTALS ROW ))))))))))))))) -->
                    <div class="panel-footer totalsRow" style="margin:0; padding:0">
                        <div class="row " style="margin:0; padding:0">
                            <table style="margin:0; width:100%;">
                                <tr>
                                    <td>
                                        <table style="width:100%">
                                            <tr class="totalsRow">
                                                <td @*class="col-sm-2 buildingCol headerCol"*@ style="vertical-align:middle; min-width:183px; max-width:183px; width:17%;">
                                                    <span>@Model.missedGoals.rowName</span>
                                                </td>

                                                @{colCounter = 0;}
                                                @foreach (REDZONE.Models.MeasuredCellEntity bldngMV in @Model.missedGoals.entityMetricCells)
                                                {
                                                    if (Model.rowHeadings.entityMetricCells[colCounter].isViewable || true)
                                                    {
                                                        //Always
                                                        <td class="buildingCol monthCol" style="vertical-align:middle; width:@strColWidth; min-width:60px">
                                                            @*width:@Model.metricColWidth;*@
                                                            @if (String.IsNullOrEmpty(@bldngMV.metricValue) || Model.rowHeadings.entityMetricCells[colCounter].score == 0)
                                                            { <br /> }
                                                            else
                                                            { @bldngMV.metricValue }
                                                        </td>
                                                    }
                                                    colCounter++;
                                                }
                                                <td class="buildingCol " style="vertical-align:middle; width:11%;">
                                                    <br />
                                                </td>
                                            </tr>
                                        </table>
                                    </td>
                                    <td class="scroll-Offset"></td>
                                </tr> <!-- ------------------- METRIC GOALS NOT MET TOTAL ROW END ----------------- -->
                            </table>
                        </div>

                    </div>  <!-- ----------- END OF FOOTER ROW (ROW TOTALS) -----------------  -->
                </div> <!-- ------- END of Metric Data Table -------- -->
















                @*<div class="row" style="border:1px solid lightgray; border-radius: 5px; margin: 0; padding:0; ">
                        <!-- Table -->
                        <!-- ROWS -->
                        <div class="row headerRow ">
                            <!-- Column Header Titles Row -->
                            <div class="col-sm-2 buildingCol">
                                <div class="row" style="margin:0; ">
                                    <input type="hidden" id="sortMonth" value="Building" />
                                    <input type="hidden" id="sortOrder" value=@Model.rowHeadings.displayClass />
                                    <span style="font-weight:bold;"> @Model.rowHeadings.rowName</span>
                                    <button type="button" class="btn btn-sm sortButton @btnClass" aria-label="Sort by" style="padding:0px 2px; float:right">
                                        <span class="glyphicon @sortIcon" aria-hidden="true"></span>
                                    </button>
                                </div>
                            </div>  <!-- Metric Name Column -->
                            <div class="col-sm-9">
                                <div class="row">
                                    <table style="width:100%">
                                        <tr class="valueRow">
                                            @foreach (REDZONE.Models.MeasuredCellEntity dscBldngHdr in @Model.rowHeadings.entityMetricCells)
                                            {
                                                sortIcon = String.IsNullOrEmpty(dscBldngHdr.displayClass) ? "glyphicon-sort" : dscBldngHdr.displayClass.Equals("ASC") ? "glyphicon-sort-by-attributes" : "glyphicon-sort-by-attributes-alt";
                                                //string sortIcon = String.IsNullOrEmpty(dscBldngHdr.displayClass) ? "glyphicon-sort" : dscBldngHdr.displayClass.Equals("ASC") ? "glyphicon glyphicon-triangle-bottom" : "glyphicon glyphicon-triangle-top";
                                                btnClass = String.IsNullOrEmpty(dscBldngHdr.displayClass) ? "btn-default" : "btn-primary";
                                                if (dscBldngHdr.isViewable)
                                                {
                                                    <td class="buildingCol monthCol" style="width:@Model.metricColWidth">
                                                        <input type="hidden" id="sortMonth" value="@dscBldngHdr.metricName" />
                                                        <input type="hidden" id="sortOrder" value="@dscBldngHdr.displayClass" />
                                                        <span style="font-weight:bold">@dscBldngHdr.metricName</span>
                                                        <button type="button" class="btn btn-sm sortButton @btnClass" aria-label="Sort by" style="padding:0px 2px; float:right">
                                                            <span class="glyphicon @sortIcon" aria-hidden="true"></span>
                                                        </button>
                                                    </td>
                                                }
                                                colCounter++;
                                            }
                                        </tr>
                                    </table>
                                </div>
                            </div>
                            <div class="col-sm-1 scoreCol">
                                Goals Missed
                            </div>
                        </div><!-- ---------------- TITLES ROW END ------------ -->
                        <div class="row buildingRowX" style="background-color: #bbedff; ">
                            <div class="col-sm-2 buildingCol">
                                @Model.rowGoal.rowName
                            </div>
                            <div class="col-sm-9">
                                <div class="row ">
                                    <table style="width:100%">
                                        @{colCounter = 0;}
                                        <tr class="valueRow">
                                            @foreach (REDZONE.Models.MeasuredCellEntity bldngMV in Model.rowGoal.entityMetricCells)
                                            {
                                                bool cellIsViewable = Model.rowHeadings.entityMetricCells[colCounter].isViewable;
                                                //if (bldngMV.isViewable)
                                                if (cellIsViewable)
                                                {
                                                    <td class="buildingCol monthCol" style="width:@Model.metricColWidth; color:blue; font-weight:bold;">
                                                        @if (String.IsNullOrEmpty(@bldngMV.metricValue))
                                                        { <br /> }
                                                        else
                                                        { @bldngMV.metricValue }
                                                    </td>
                                                }
                                                colCounter++;
                                            }
                                        </tr>
                                    </table>
                                </div>
                            </div>
                            <div class="col-sm-1 buildingCol scoreCol">
                                <br />
                            </div>
                        </div><!-- ------------------------ GOALS ROW END ---------------- -->
                        <!-- ---------------------- Begin Displaying All Rows for Metric --------- -->
                        @foreach (var buildingRow in Model.metricRows)
                        {
                            colCounter = 0;
                            bool allNAs = true;
                            <div class="row buildingRowX rHover">
                                <div class="col-sm-2 buildingCol">
                                    <a href="@buildingRow.rowURL">@buildingRow.rowName</a>
                                </div>  <!-- Metric Name Column -->
                                <div class="col-sm-9">
                                    <div class="row ">
                                        <table style="width:100%">
                                            <tr class="valueRow">
                                                @foreach (REDZONE.Models.MeasuredCellEntity buildingCell in buildingRow.entityMetricCells)
                                                {
                                                    bool cellIsViewable = Model.rowHeadings.entityMetricCells[colCounter].isViewable;
                                                    if (cellIsViewable)
                                                    {
                                                        <td class="buildingCol valueCell @buildingCell.displayClass" style="width:@Model.metricColWidth">
                                                            @if (String.IsNullOrEmpty(@buildingCell.metricValue))
                                                            { <br /> }
                                                            else
                                                            {
                                                                if (!buildingCell.metricValue.Equals("N/A")) { allNAs = false; }
                                                                @buildingCell.metricValue
                                                            }
                                                        </td>
                                                    }
                                                    colCounter++;
                                                }
                                            </tr>
                                        </table>
                                    </div>
                                </div>  <!-- End of block with 12 Month Value Columns -->


                                <div class="col-sm-1 buildingCol scoreCol">
                                    @if (allNAs)
                                    { <text>---</text>}
                                    else
                                    { @buildingRow.redTotals }
                                </div>
                            </div>
                        } <!-- --------------------------- DISPLAY OF DATA ROWS LOOP END --------------- -->
                        <div class="row buildingRowX totalsRow">
                            <div class="col-sm-2 buildingCol" style="text-align:center; ">
                                @Model.missedGoals.rowName
                            </div>
                            <div class="col-sm-9">
                                <div class="row ">
                                    @{colCounter = 0;}
                                    <table style="width:100%">
                                        <tr class="valueRow">
                                            @foreach (REDZONE.Models.MeasuredCellEntity bldngMV in @Model.missedGoals.entityMetricCells)
                                            {
                                                if (Model.rowHeadings.entityMetricCells[colCounter].isViewable)
                                                {
                                                    <td class="buildingCol monthCol" style="width:@Model.metricColWidth;">
                                                        @if (String.IsNullOrEmpty(@bldngMV.metricValue))
                                                        { <br /> }
                                                        else
                                                        { @bldngMV.metricValue }
                                                    </td>
                                                }
                                                colCounter++;
                                            }
                                        </tr>
                                    </table>
                                </div>
                            </div>
                            <div class="col-sm-1 buildingCol ">
                                <br />
                            </div>
                        </div><!-- MISSED GOALS TOTAL ROW -->
                    </div> <!-- End of DIV Table Table -->*@










            </div>
        </div>
    </div>
}
<br /><br />

<script>
    $(document).ready(function () {
        $(".menuItem").removeClass("menuSelected");
        $("#mDashboard").addClass("menuSelected");
        $("#backToDashboard").click(function () {
            location.href("/Home/Index");
        });
        $(".sortButton").click(function () {
            var sort_Month = $(this).parent().find("#sortMonth").first().val();
            var sort_Dir = $(this).parent().find("#sortOrder").first().val();
            //alert("Current Sort is: " + sort_Dir);

            if (sort_Dir == "" || sort_Dir == "DESC") { sort_Dir = "ASC"; } else { sort_Dir = "DESC"; };
            var gotoURL = "/Home/MetricSummary/?year=@Model.year&metricID=@Model.metricID&sortMonth=" + sort_Month + "&sortDir=" + sort_Dir;
            //alert(gotoURL);
            location.href = gotoURL;
        });
        $("#sortBuilding").click(function () {
            var gotoURL = "/Home/MetricSummary/?year=@Model.year&metricID=@Model.metricID";
            location.href = gotoURL;
        });

        if ((navigator.userAgent.indexOf("MSIE") != -1) || (!!document.documentMode == true)) {
            $(".scroll-Offset").addClass('IEScroll');
        }
        else {
            $(".scroll-Offset").addClass('notIEScroll');
        }
        //------------------------------------------------------------------------
        $('#chkMyBuildingsOnly').change(function () {
            var filter = ($(this).prop("checked") ? "Y" : "N");

            $.ajax({
                url: '/Account/setUserBuildingFilter',
                method: "POST",
                cache: false,
                data: { bFilter: filter },
                //contentType: "application/json; charset=utf-8",
                //dataType: "json",
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Failed to Set the User Building Filter.\nError:" + textStatus + "," + errorThrown);  //<-- Trap and alert of any errors if they occurred
                }
            }).done(function (d) {
                if (d == "Success") {
                    //alert("Filter was successfully set to '" + filter + "' on the Server Side");
                    location.reload();
                } else {
                    alert("Failed to set the Server Filter Flag:" + d);
                }
            });
        });
    });
</script>
