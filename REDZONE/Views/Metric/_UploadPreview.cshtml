@model REDZONE.Models.RZ_Metric

<!-- jasny-bootstrap Latest compiled and minified CSS          Used for File Uploader Widget  -->
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/jasny-bootstrap/3.1.3/css/jasny-bootstrap.min.css">
<!-- jasny-bootstrap Latest compiled and minified JavaScript   Used for File Uploader Widget  -->
<script src="//cdnjs.cloudflare.com/ajax/libs/jasny-bootstrap/3.1.3/js/jasny-bootstrap.min.js"></script>

<div class="modal-header" style="background-color: #e2e1e1">
    <button type="button" class="close" data-dismiss="modal">&times;</button>
    <h4 class="modal-title"> Excel Data File Import/Validation for '@Model.metricName' Metric</h4>
</div>

<div class="modal-body">
  <div class="row">
        @using (Html.BeginForm("UploadValidated", "Metric", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmExcelUpload" }))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="metricId" value="@Model.id" />
            <input type="hidden" name="metricName" value="@Model.metricName" />
            <input type="hidden" name="metricMonth" value="@Model.displayPeriodName.Substring(0, @Model.displayPeriodName.IndexOf(' '))" />
            <input type="hidden" name="metricYear" value="@Model.displayPeriodName.Substring(@Model.displayPeriodName.IndexOf(' ') + 1)" />
            <input type="hidden" name="metricDataType" value="@Model.metricDataType" />
            <input type="hidden" id="allBuildings" value="@Model.allBuildings" name="allBuildings" />
            <input type="hidden" name="na_allowed" value="@Model.na_allowed.ToString()" />
            <input type="hidden" name="mtrcMinVal" value="@Model.mtrcMinVal" />
            <input type="hidden" name="mtrcMaxVal" value="@Model.mtrcMaxVal" />
            <input type="hidden" name="maxDecPlaces" value="@Model.maxDecPlaces" />
            <input type="hidden" name="maxStrSize" value="@Model.maxStrSize" />
            <div class="col-sm-6">
                <div class="fileinput fileinput-new input-group " data-provides="fileinput">
                    <div class="form-control" data-trigger="fileinput">
                        <i class="glyphicon glyphicon-file fileinput-exists"></i>
                        <span class="fileinput-filename"></span>
                    </div>
                    <span class="input-group-addon btn btn-primary btn-file">
                        <span class="fileinput-new ">Select file to Upload</span>
                        <span class="fileinput-exists">Change</span>
                        <input type="file" id="UploadedFile" name="UploadedFile" style="max-width: 300px">
                    </span>
                    <a href="#" class="input-group-addon btn btn-primary fileinput-exists" data-dismiss="fileinput">Remove</a>
                </div>
            </div>
        }
        <div class="col-sm-4">
            <input class="btn btn-primary" type="button" @*name="Submit"*@ id="btnValidate" value="Upload File" disabled="disabled" />
        </div>
        <div class="col-sm-2" >
            <div class="row rowViewHide" id="showErrorDiv" style="font-weight:normal; display:none">
                <label><input type="checkbox" id="chkShowAll" value=""> Show Errors Only</label>
            </div>            
        </div>
    </div>


  @*@using (Html.BeginForm("Upload", "Metric", FormMethod.Post, new { enctype = "multipart/form-data", id="frmExcelUpload" }))
        {
  }*@
  <div id="validation-partial">

  </div>
</div>

<div class="modal-footer" style="text-align:center">
  <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
  @*<button type="button" id="approve-btn" class="btn btn-danger">Upload</button>*@
</div>

<script>
    $(document).ready(function () {
        $("#UploadedFile").on('change', function () {
            if ($(this).val() == "") {
                $("#btnValidate").prop("disabled", true);
            }
            else {
                var file = this.files[0];
                //var name = file.name;
                //var size = file.size;
                //var type = file.type;
                if (file.name.match(/xlsx/) == null) {
                    $("#btnValidate").prop("disabled", true);
                    alert("Invalid File Selected. File must be an Excel '*.xlsx' File");
                    $(this).val("");
                }
                else {
                    //alert("Selection done:\nFile Name: " + name + "\nFile Size: " + size + "\nFile Type: " + type);
                    $("#btnValidate").prop("disabled", false);
                }
            }
        });

        $("#btnValidate").click(function () {
            $("#showErrorDiv").show();
            var formData = new FormData($('#frmExcelUpload')[0]);
            var myFile = document.getElementById('UploadedFile').files[0];
            formData.append('UploadedFile', myFile, myFile.name);
            // var postURL = '/Metric/Upload';

            // Set up the request.
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function () {
                if (xhr.readyState == XMLHttpRequest.DONE) {
                    var isValidated = $($.parseHTML(xhr.responseText)).filter("#isValidated").val();
                    //alert("IsValidate Flag = " + flagValue.val());
                    
                    if (isValidated == "True") {
                        //alert("Input File Data Validation Passed!");
                        $("#frmExcelUpload").submit();
                    }
                    else {
                        //alert("Errors were found when validating Input Excel File.");
                        $("#validation-partial").html($.parseHTML(xhr.responseText));
                        $("#rowViewHide").show();
                    }                    
                    //alert(xhr.responseText);
                }
            }
            // Open the connection.
            xhr.open('POST', '/Metric/Upload', true);
            // Set up a handler for when the request finishes.
            xhr.onload = function (d) {
                if (xhr.status === 200) {
                    //// File(s) uploaded.
                    //$('#approve-btn').html("Wait");
                    //// uploadButton.innerHTML = 'Upload';
                    //alert("Process Completed.\n");
                } else {
                    alert('An error occurred!' );
                }
            };
            // Send the Data.
            xhr.send(formData);
        });

        $("#chkShowAll").click(function () {
            if ($(this).prop('checked')) {
                $('.withNoError').hide();
            }
            else {
                $('.withNoError').show();
            }
        });


    }); //----- End Ready ------
    //function postSuccess() {
    //    alert("Post was successful.");
    //}
    //function postFailed() {
    //    alert("Post Failed.");
    //}

</script>